= column_sort

Sort columns for index pages on admins.

== Installation

Add to your Gemfile

    gem "column_sort"

Mark sortable fields in the model

    class Person < ActiveRecord::Base

      scope :column_sort_first_name_asc, lambda { order("people.first_name ASC")  }
      scope :column_sort_first_name_desc, lambda { order("people.first_name DESC")  }
      ...
      sortable_fields [:first_name, :last_name, :date_of_birth]

* IMPORTANT NOTE: the sortable fields call must go after all of the sorting scopes due to ruby mixin load order
* Complex sorts can always be added with the syntax scope :column_sort_<fieldname>_asc

Add the sorting scope to the query in the controller and set a default sort (optional)

    class PeopleController < ApplicationController
      def index
        default_column_sort(:last_name)
        @people = Person.active.column_sort(params[:column_sort])
      end

Use the helper on the view to link to sorted links to the page

    %table
      %th
        First Name
        = column_sort :first_name

== Contributing to column_sort
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
* Fork the project.
* Start a feature/bugfix branch.
* Commit and push until you are happy with your contribution.
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2012 Jeremiah Hemphill. See LICENSE.txt for
further details.
